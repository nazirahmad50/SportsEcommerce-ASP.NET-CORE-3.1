<table class="table table-sm table-striped">
    <thead>
        <tr>
            <th colspan="5" class="text-center">@TableTitle</th>
        </tr>
    </thead>
    <tbody>
        @if (Orders?.Count() > 0)
        {
            @foreach (var order in Orders)
            {
                <tr>
                    <td>
                        @order.Name
                    </td>
                    <td>
                        @order.Zip
                    </td>

                    <th>Product</th>
                    <th>Quantity</th>

                    <td>
                        <button class="btn btn-sm btn-danger" @onclick="@(e => OrderSelected.InvokeAsync(order.OrderId))">
                            @ButtonLabel
                        </button>
                    </td>
                </tr>

                @foreach (var line in order.Lines)
                {
                    <tr>
                        <td colspan="2"></td>
                        <td>@line.Product.Name</td>
                        <td>@line.Quantity</td>
                        <td></td>
                    </tr>
                }

            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">
                    No Orders
                </td>
            </tr>
        }
    </tbody>
</table>


@code {
    // decorated by the prop parameter which means tha teh value will be provided at runtime by the paranet component
    [Parameter]
    public string TableTitle { get; set; }

    [Parameter]
    public string ButtonLabel { get; set; } = "Ship";

    [Parameter]
    public IEnumerable<Order> Orders { get; set; }

    // this event will be invoked by the parent component and it will take an int
    [Parameter]
    public EventCallback<int> OrderSelected { get; set; }
}
